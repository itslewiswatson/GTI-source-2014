----------------------------------------->>
-- GTI: Grand Theft International
-- Date: 04 Mar 2014
-- Resource: GTIgroups/permissions.slua
-- Type: Server Side
-- Author: JT Pennington (JTPenn)
----------------------------------------->>

local mem_permissions = {
[1] = "delete_group",			-- Delete the Group	
[2] = "change_group_name", 		-- Change the Group's Name
[3] = "add_member",				-- Invite a Member
[4] = "del_member",				-- Kick a Member
[5] = "modify_ranks",			-- Add/Remove Ranks (not permissions)
[6] = "mod_group_info",			-- Modify Group Info (MOTD)
[7] = "mod_application",		-- Modify In game Application Format
[8] = "change_member_rank",		-- Promote/Demote Members
[9] = "change_leader",			-- Transfer Leadership
[10] = "warn_member",			-- Change Member Warning Level
[11] = "view_history",			-- View Group History
[12] = "view_applications",		-- Pending Applications
[13] = "mod_group_tags",		-- Modify Automatic Tagging System
[14] = "moderate_chat",			-- Moderate Group Chat
[15] = "mod_whitelist",			-- Modify Member Whitelist
[16] = "mod_blacklist",			-- Modify Member Blacklist
[17] = "mod_permissions",		-- Modify Rank Permissions
[18] = "add_group_bank",		-- Deposit Money into Group Bank
[19] = "remove_group_bank",		-- Withdraw Money from Group Bank
[20] = "add_group_storage",		-- Add items to Group Storage
[21] = "rem_group_storage",		-- Take items from Group Storage
[22] = "mod_rank_earnings",		-- Modify Rank Bonus Earnings
[23] = "form_alliance",			-- Form Alliances with other groups
[24] = "break_alliance",		-- Break Alliances with other groups
[25] = "buy_group_properties",	-- Buy Properties on behalf of group
[26] = "can_use_vehicles",		-- Can use Group Vehicles
[27] = "can_use_health",		-- Can use Health pickup
[28] = "can_use_armor",			-- Can use Armor
[29] = "can_use_weapons",		-- Can use Weapons
}

local group_permissions = {
[1] = "invite_members",			-- Add Members to the Group
[2] = "change_name",			-- Change the Group's Name
[3] = "have_group_bank",		-- Have/Use a Group Bank
[4] = "have_group_storage",		-- Have/Use a Group Storage
[5] = "have_group_bonus",		-- Have Payment Bonuses (e.g. 10%, 25%, etc.)
[6] = "buy_properties",			-- Own Group Properties
[7] = "group_deplomacy",		-- Form Alliances & Agreements with other groups
[8] = "own_groups",				-- Combine Groups as child groups
[9] = "combine_groups",			-- Combine Groups into one, central group
[10] = "have_whitelist",		-- Have a group whitelist
[11] = "have_blacklist",		-- Have a group blacklist
[12] = "have_vehicles",			-- Have Vehicle Spawns
[13] = "have_health",			-- Have Health Pickup
[14] = "have_armor",			-- Have Armor Pickup
[15] = "have_weapons"			-- Have Weapon Pickups
}

-- Get Permissions
------------------->>

function hasMemberPermissionTo(member, action)
	if (not member or not action) then return false end
	if (not isElement(member) or getElementType(member) ~= "player" or type(action) ~= "string") then return false end
	
	local rankID = getPlayerGroupRank(member)
	if (getGroupRankData(rankID, "isLeader") == 1) then return true end
	local perm = getGroupRankData(rankID, "permissions") or ""
	local perProfile = split(perm, ",")
	for i,v in ipairs(perProfile) do
		if (mem_permissions[v] == action) then
			return true
		end
	end
	return false
end

function hasGroupPermissionTo(groupID, action)
	if (not groupID or not action) then return false end
	if (type(groupID) ~= "number" or type(action) ~= "string") then return false end
	
	local perm = getGroupData(groupID, "permissions") or ""
	local perProfile = split(perm, ",")
	for i,v in ipairs(perProfile) do
		if (group_permissions[v] == action) then
			return true
		end
	end
	return false
end

-- Get Permissions Table
------------------------->>

function getAllRankPermissions(rankID)
	if (not rankID or type(rankID) ~= "number") then return false end
	
	local perm = getGroupRankData(rankID, "permissions") or ""
	local perProfile = split(perm, ",")
	return perProfile
end

function getAllGroupPermissions(groupID)
	if (not groupID or type(groupID) ~= "number") then return false end
	
	local perm = getGroupData(groupID, "permissions") or ""
	local perProfile = split(perm, ",")
	return perProfile
end

-- Get Default Permissions
--------------------------->>

function getDefaultPermissionSet(permissions)
	if (not permissions or type(permissions) ~= "string") then return false end
	
	local permTable = {}
	if (permissions == "*") then		-- Founder/Leader Permissions
		for i=1,#mem_permissions do
			table.insert(permTable, i)
		end
		return permTable
	elseif (permissions == "New Member") then
		return {}
	end
end

-- Set Permissions
------------------->>

function setAllRankPermissions(rankID, permTable)
	if (not rankID or not permTable) then return false end
	if (type(rankID) ~= "number" or type(permTable) ~= "table") then return false end
	
	permTable = table.sort(permTable)
	permTable = table.concat(permTable, ",")
	
	setGroupRankData(rankID, "permissions", permTable)
	return true
end

function setAllGroupPermissions(groupID, permTable)
	if (not groupID or not permTable) then return false end
	if (type(groupID) ~= "number" or type(permTable) ~= "table") then return false end
	
	permTable = table.sort(permTable)
	permTable = table.concat(permTable, ",")
	
	setGroupData(groupID, "permissions", permTable)
	return true
end
