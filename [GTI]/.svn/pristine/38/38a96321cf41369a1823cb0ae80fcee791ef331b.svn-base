----------------------------------------->>
-- GTI: Grand Theft International
-- Date: 27 Dec 2013
-- Resource: GTIvehicles/dealerships.slua
-- Type: Server Side
-- Author: JT Pennington (JTPenn)
----------------------------------------->>

-- Show Car Selection on Hit
----------------------------->>

local activeCarDealer = {}
function bindKeyOnPickupHit(player)
	exports.GTIhud:drawNote("DealerMsg", "Press 'Z' to Purchase a Vehicle", player, 100, 0, 125, 5000)
	if (not isKeyBound(player, "z", "up", showCarDealershipPanel)) then
		bindKey(player, "z", "up", showCarDealershipPanel)
	end
	activeCarDealer[player] = {}
	activeCarDealer[player][1] = dealerPoints[source]
	activeCarDealer[player][2] = source
end

function showCarDealershipPanel(player)
	if (not isElement(activeCarDealer[player][2]) or type(activeCarDealer[player][1]) ~= "number") then 
		unbindKey(player, "z", "up", showCarDealershipPanel)
		return
	end
	local i = activeCarDealer[player][1]
	local pickup = activeCarDealer[player][2]
	local x1,y1 = getElementPosition(player)
	local x2,y2 = getElementPosition(pickup)
	
	local dist = getDistanceBetweenPoints2D(x1,y1, x2,y2)
	if (dist >= 2) then 
		unbindKey(player, "z", "up", showCarDealershipPanel)
		return
	end
	
	local tbl = dealerLocations[i]
	local carTable = {}
	local vehPrices = exports.GTIeconomy:getVehiclePriceTable()
	for i,category in ipairs(tbl.categories) do
		carTable[category] = vehPrices[category]
	end
	
	for k,v in pairs(carTable) do
		for i,v in ipairs(carTable[k]) do
			local money = getPlayerMoney(player)
			if (money < v.cost) then
				carTable[k][i].afford = false
			else
				carTable[k][i].afford = true
			end
		end
	end	
	triggerClientEvent(player, "GTIvehicles.shopForPersonalVehicle", player, tbl, carTable)
end

-- Sell Vehicle Panel
---------------------->>

local activeCarSeller = {}
function bindSellKeyOnPickupHit(player)
	exports.GTIhud:dqm("DealerMsg", "Press 'Z' to sell a vehicle", player, 100, 0, 125, 5000)
	if (not isKeyBound(player, "z", "up", showCarDealershipPanel)) then
		bindKey(player, "z", "up", showCarDealershipPanel)
	end
	activeCarSeller[player] = {}
	activeCarSeller[player][1] = dealerSellPoints[source]
	activeCarSeller[player][2] = source
end

function showCarSellPanel(player)
	if (not isElement(activeCarSeller[player][2]) or type(activeCarSeller[player][1]) ~= "number") then 
		unbindKey(player, "z", "up", showCarSellPanel)
		return
	end
	local i = activeCarSeller[player][1]
	local pickup = activeCarSeller[player][2]
	local x1,y1 = getElementPosition(player)
	local x2,y2 = getElementPosition(pickup)
	
	local dist = getDistanceBetweenPoints2D(x1,y1, x2,y2)
	if (dist >= 2) then 
		unbindKey(player, "z", "up", showCarSellPanel)
		return
	end
	
	local tbl = dealerSellers[i]
	local carTable = {}
	local account = getPlayerAccount(player)
	local vehData = getAllVehicleOwnerData(account)
	local index = 1
	for vehKey,vehID in pairs(vehData) do
		for i,category in ipairs(tbl.categories) do
			local vehID = tonumber(vehID)
			local vehicleID = getVehicleData(vehID, "vehicleID")
			if (isVehicleInCategory(vehicleID, category)) then
				carTable[index] = {}
				carTable[index][1] = vehID
				index = index + 1
				break
			end
		end
	end
	
	for k,v in pairs(carTable) do
		vehID = v[1]
			-- Vehicle Model
		carTable[k][2] = getVehicleData(vehID, "vehicleID")
			-- Vehicle Color
		local colors = getVehicleData(vehID, "color")
		colors = split(colors, ",")
		carTable[k][3] = {}
		for i,v2 in ipairs(colors) do
			carTable[k][3][i] = tonumber(v2)
		end
			-- Vehicle Value
		carTable[k][5] = getVehicleValue(vehID)
		local health = getVehicleData(vehID, "health")
		if (activeVehicleIDs[vehID]) then
			local vehicle = getVehicleByID(vehID)
			health = getElementHealth(vehicle)
		end
		if (health < 300) then health = 300 end
		carTable[k][5] = math.floor( carTable[k][5] * ( ( (health-300) /1400)+0.5 ) )
		carTable[k][6] = health
		if (isVehicleBeingSold(vehID)) then
			carTable[k][7] = true
		end
	end	
	triggerClientEvent(player, "GTIvehicles.sellVehicleToDealer", player, tbl, carTable)
end