local screenW, screenH = guiGetScreenSize()local localPlayer = getLocalPlayer()Training = {    tab = {},    staticimage = {},    tabpanel = {},    label = {},    button = {},    window = {},    gridlist = {},    memo = {}}local types = {	--{ name = "name", id, "Description"}	{ name = "Handguns", desc = "A handgun is a fiream designed to be handheld, in either one or both hands. This characteristic differentiates handguns as a general class of firearms from long guns such as rifles and shotguns."},	{ name = "Shotguns", desc = "A shotgun is a firearm that is usually designed to be fired from the shoulder, which uses the energy of a fixed shell to fire a number of small spherical pellets called shot, or a solid projectile called a slug."},	{ name = "Sub-Machine", desc = "A submachine gun is an automatic carbine designed to fire pistol cartridges. It combines the automatic fire of a machine gun with the cartridge of a pistol."},	{ name = "Assault", desc = "An assault rifle is a selective fire rifle that uses an intermediate cartridge and a detachable magazine. Assault rifles are the standard service rifles in most modern armies."},	{ name = "Rifles", desc = "A rifle is a firearm designed to be fired from the shoulder, with a barrel that has a helical groove or pattern of grooves ('rifling') cut into the barrel walls. The raised areas of the rifling are called 'lands,' which make contact with the projectile, imparting spin around an axis corresponding to the orientation of the weapon."},}local guns = {	{ name = "Colt .45", id = 2, gunID = 22, needed = 0, cost = 50},	{ name = "Silenced 9mm", id = 2, gunID = 23, needed = 500, cost = 250},	{ name = "Desert Eagle", id = 2, gunID = 24, needed = 1000, cost = 750},	{ name = "Shotgun", id = 3, gunID = 25, needed = 750, cost = 250},	{ name = "Sawn-off Shotgun", gunID = 26, needed = 2250, cost = 550},	{ name = "SPAS-12", id = 3, gunID = 27, needed = 2600, cost = 550},	{ name = "Uzi", id = 4, gunID = 28, needed = 5000, cost = 250},	{ name = "MP5", id = 4, gunID = 29, needed = 7500, cost = 250},	{ name = "Tec-9", id = 4, gunID = 32, needed = 8000, cost = 250},	{ name = "AK-47", id = 5, gunID = 30, needed = 10000, cost = 500},	{ name = "M4", id = 5, gunID = 31, needed = 15000, cost = 500},	{ name = "Sniper Rifle", id = 6, gunID = 34, needed = 25000, cost = 750},}setTimer(	function ( )		guiGridListClear( Training.gridlist[1])		for i,k in ipairs ( types ) do			local typeRow = guiGridListAddRow(Training.gridlist[1])			guiGridListSetItemText(Training.gridlist[1], typeRow, 1, k.name, false, false)			guiGridListSetItemData(Training.gridlist[1], typeRow, 1, k.desc)		end	end, 100, 1)						--[[						if getPlayerMoney( localPlayer) >= tonumber(v.price) then							guiGridListSetItemColor( gun.gridlist[1], gRow, nameRow, 45, 123, 49)							guiGridListSetItemColor( gun.gridlist[1], gRow, priceRow, 45, 123, 49)						guiGridListSetItemColor( gun.gridlist[1], gRow, numRow, 45, 123, 49)						elseif getPlayerMoney( localPlayer) <= tonumber(v.price) then							guiGridListSetItemColor( gun.gridlist[1], gRow, nameRow, 123, 45, 49)							guiGridListSetItemColor( gun.gridlist[1], gRow, priceRow, 123, 45, 49)							guiGridListSetItemColor( gun.gridlist[1], gRow, numRow, 123, 45, 49)						else							guiGridListSetItemColor( gun.gridlist[1], gRow, nameRow, 163, 123, 49)							guiGridListSetItemColor( gun.gridlist[1], gRow, priceRow, 163, 123, 49)							guiGridListSetItemColor( gun.gridlist[1], gRow, numRow, 163, 123, 49)						end						--]]addEventHandler( "onClientGUIClick", root,	function ( )		if source == Training.gridlist[1] then			local Trow, Tcol = guiGridListGetSelectedItem(Training.gridlist[1])			local sType = guiGridListGetItemText(Training.gridlist[1], Trow, Tcol)			local sDesc = guiGridListGetItemData(Training.gridlist[1], Trow, Tcol)			guiGridListClear( Training.gridlist[2])			local descData = guiGetText( Training.memo[1])			if descData == "N/A" then				guiSetText( Training.memo[1], "")			else				if sDesc then					guiSetText( Training.memo[1], sDesc)				else					guiSetText( Training.memo[1], "")				end			end			if guiGetText( Training.label[2]) ~= "Points Needed to Ugrade Weapon: " then				guiSetText( Training.label[2], "Points Needed to Ugrade Weapon: ")			end			if guiGetText( Training.label[17]) ~= "Total Gun Points Needed: " then				guiSetText( Training.label[17], "Total Gun Points Needed: ")			end			for i,v in ipairs ( guns ) do				if sType == "Handguns" then					if v.id == 2 then						local gRow = guiGridListAddRow(Training.gridlist[2])						guiGridListSetItemText(Training.gridlist[2], gRow, 1, v.name, false, false)						guiGridListSetItemText(Training.gridlist[2], gRow, 2, v.cost.."GP", false, false)						guiGridListSetItemData(Training.gridlist[2], gRow, 1, v.gunID)						guiGridListSetItemData(Training.gridlist[2], gRow, 2, v.needed)					end				elseif sType == "Shotguns" then					if v.id == 3 then						local gRow = guiGridListAddRow(Training.gridlist[2])						guiGridListSetItemText(Training.gridlist[2], gRow, 1, v.name, false, false)						guiGridListSetItemText(Training.gridlist[2], gRow, 2, v.cost.."GP", false, false)						guiGridListSetItemData(Training.gridlist[2], gRow, 1, v.gunID)						guiGridListSetItemData(Training.gridlist[2], gRow, 2, v.needed)					end				elseif sType == "Sub-Machine" then					if v.id == 4 then						local gRow = guiGridListAddRow(Training.gridlist[2])						guiGridListSetItemText(Training.gridlist[2], gRow, 1, v.name, false, false)						guiGridListSetItemText(Training.gridlist[2], gRow, 2, v.cost.."GP", false, false)						guiGridListSetItemData(Training.gridlist[2], gRow, 1, v.gunID)						guiGridListSetItemData(Training.gridlist[2], gRow, 2, v.needed)					end				elseif sType == "Assault" then					if v.id == 5 then						local gRow = guiGridListAddRow(Training.gridlist[2])						guiGridListSetItemText(Training.gridlist[2], gRow, 1, v.name, false, false)						guiGridListSetItemText(Training.gridlist[2], gRow, 2, v.cost.."GP", false, false)						guiGridListSetItemData(Training.gridlist[2], gRow, 1, v.gunID)						guiGridListSetItemData(Training.gridlist[2], gRow, 2, v.needed)					end				elseif sType == "Rifles" then					if v.id == 6 then						local gRow = guiGridListAddRow(Training.gridlist[2])						guiGridListSetItemText(Training.gridlist[2], gRow, 1, v.name, false, false)						guiGridListSetItemText(Training.gridlist[2], gRow, 2, v.cost.."GP", false, false)						guiGridListSetItemData(Training.gridlist[2], gRow, 1, v.gunID)						guiGridListSetItemData(Training.gridlist[2], gRow, 2, v.needed)					end				end			end		elseif source == Training.gridlist[2] then			local Grow, Gcol = guiGridListGetSelectedItem(Training.gridlist[2])			local gName = guiGridListGetItemText(Training.gridlist[2], Grow, Gcol)			local gCost = guiGridListGetItemText(Training.gridlist[2], Grow, 2)			local gPoint = guiGridListGetItemData(Training.gridlist[2], Grow, 2)			guiSetText( Training.label[2], "Ugrade Gun Points Needed: ")			guiSetText( Training.label[17], "Total Gun Points Needed: ")			if gName then				if gPoint then					local gunData = guiGetText( Training.label[2])					local gunCData = guiGetText( Training.label[17])					if gunData ~= "" then						guiSetText( Training.label[2], "")						guiSetText( Training.label[2], "Ugrade Gun Points Needed: "..gPoint.." GP")						if gunCData ~= "" then							guiSetText( Training.label[17], "")							local gCost = string.gsub( gCost, "GP", "")							local cGost = gCost+gPoint							guiSetText( Training.label[17], "Total Gun Points Needed: "..cGost.." GP")						end					end				end			end		end	end)Training.window[1] = guiCreateWindow((screenW - 481) / 2, (screenH - 515) / 2, 481, 515, "GTI Gun Range", false)guiWindowSetSizable(Training.window[1], false)guiSetVisible( Training.window[1], false)Training.tabpanel[1] = guiCreateTabPanel(9, 20, 462, 450, false, Training.window[1])Training.tab[1] = guiCreateTab("Training", Training.tabpanel[1])Training.gridlist[1] = guiCreateGridList(10, 10, 154, 405, false, Training.tab[1])guiGridListAddColumn(Training.gridlist[1], "Categories", 0.9)Training.button[1] = guiCreateButton(327, 387, 125, 28, "Begin Training", false, Training.tab[1])Training.gridlist[2] = guiCreateGridList(174, 10, 278, 144, false, Training.tab[1])guiGridListAddColumn(Training.gridlist[2], "Guns", 0.65)guiGridListAddColumn(Training.gridlist[2], "Cost", 0.2)Training.label[1] = guiCreateLabel(174, 164, 278, 15, "Description: ", false, Training.tab[1])Training.memo[1] = guiCreateMemo(174, 189, 278, 139, "", false, Training.tab[1])guiMemoSetReadOnly(Training.memo[1], true)Training.label[2] = guiCreateLabel(174, 334, 278, 15, "Ugrade Gun Points Needed: ", false, Training.tab[1])Training.label[17] = guiCreateLabel(174, 364, 278, 15, "Total Gun Points Needed: ", false, Training.tab[1])Training.tab[2] = guiCreateTab("Stats", Training.tabpanel[1])Training.staticimage[1] = guiCreateStaticImage(10, 10, 150, 150, "training/target.png", false, Training.tab[2])Training.staticimage[2] = guiCreateStaticImage(170, 297, 63, 95, "training/gold.png", false, Training.tab[2])Training.staticimage[3] = guiCreateStaticImage(272, 297, 63, 95, "training/silver.png", false, Training.tab[2])Training.staticimage[4] = guiCreateStaticImage(373, 297, 63, 95, "training/bronze.png", false, Training.tab[2])Training.staticimage[5] = guiCreateStaticImage(170, 10, 16, 16, "training/3x2.png", false, Training.tab[2])Training.label[3] = guiCreateLabel(196, 10, 102, 15, "0 x 600", false, Training.tab[2])Training.staticimage[6] = guiCreateStaticImage(170, 36, 16, 16, "training/2x2.png", false, Training.tab[2])Training.label[4] = guiCreateLabel(196, 36, 102, 15, "0 x 300", false, Training.tab[2])Training.staticimage[7] = guiCreateStaticImage(170, 61, 16, 16, "training/1x2.png", false, Training.tab[2])Training.label[5] = guiCreateLabel(196, 62, 102, 15, "0 x 250", false, Training.tab[2])Training.staticimage[8] = guiCreateStaticImage(170, 87, 16, 16, "training/0x2.png", false, Training.tab[2])Training.label[6] = guiCreateLabel(196, 87, 214, 16, "0 x 50", false, Training.tab[2])Training.staticimage[9] = guiCreateStaticImage(308, 10, 16, 16, "training/3x.png", false, Training.tab[2])Training.staticimage[10] = guiCreateStaticImage(308, 35, 16, 16, "training/2x.png", false, Training.tab[2])Training.staticimage[11] = guiCreateStaticImage(308, 62, 16, 16, "training/1x.png", false, Training.tab[2])Training.staticimage[12] = guiCreateStaticImage(420, 87, 16, 16, "training/0x.png", false, Training.tab[2])Training.label[7] = guiCreateLabel(334, 10, 102, 15, "0 x 300", false, Training.tab[2])Training.label[8] = guiCreateLabel(334, 36, 102, 15, "0 x 150", false, Training.tab[2])Training.label[9] = guiCreateLabel(334, 62, 102, 15, "0 x 100", false, Training.tab[2])Training.gridlist[3] = guiCreateGridList(170, 113, 266, 174, false, Training.tab[2])guiGridListAddColumn(Training.gridlist[3], "Gun", 0.4)guiGridListAddColumn(Training.gridlist[3], "Skill", 0.4)Training.label[10] = guiCreateLabel(10, 170, 150, 15, "Points Earned: ", false, Training.tab[2])Training.label[11] = guiCreateLabel(10, 220, 150, 15, "Bullets Fired: ", false, Training.tab[2])Training.label[12] = guiCreateLabel(10, 195, 150, 15, "Points Used: ", false, Training.tab[2])Training.label[13] = guiCreateLabel(10, 245, 150, 15, "Head Hits: ", false, Training.tab[2])Training.label[14] = guiCreateLabel(10, 270, 150, 15, "Arm Hits: ", false, Training.tab[2])Training.label[15] = guiCreateLabel(10, 297, 150, 15, "Leg Hits: ", false, Training.tab[2])Training.label[16] = guiCreateLabel(10, 322, 150, 15, "Frame Hits: ", false, Training.tab[2])--Training.tab[3] = guiCreateTab("Upgrades", Training.tabpanel[1])Training.button[2] = guiCreateButton(376, 480, 95, 25, "Close", false, Training.window[1])guiGridListSetSortingEnabled( Training.gridlist[1], false)guiGridListSetSortingEnabled( Training.gridlist[2], false)guiGridListSetSortingEnabled( Training.gridlist[3], false)guiLabelSetVerticalAlign(Training.label[3], "center")guiLabelSetVerticalAlign(Training.label[4], "center")guiLabelSetVerticalAlign(Training.label[5], "center")guiLabelSetHorizontalAlign(Training.label[6], "center", false)guiLabelSetVerticalAlign(Training.label[6], "center")guiLabelSetVerticalAlign(Training.label[7], "center")guiLabelSetVerticalAlign(Training.label[8], "center")guiLabelSetVerticalAlign(Training.label[9], "center")local tmarkers = {	{289.750, -28.141, 1000.515, 1, 1},}local booths = {	{288.788, -24.920, 1000.515, 0.748, 0.901, 1.899, 1, 1}, --Booth 1	{290.177, -24.920, 1000.515, 0.856, 1.004, 1.899, 1, 1}, --Booth 2	{291.745, -24.962, 1000.515, 0.788, 0.945, 1.899, 1, 1}, --Booth 3	{293.485, -24.949, 1000.515, 0.548, 1.033, 1.899, 1, 1}, --Booth 4	{294.780, -24.972, 1000.515, 0.759, 1.055, 1.899, 1, 1}, --Booth 5	{296.205, -24.942, 1000.515, 0.828, 0.926, 1.899, 1, 1}, --Booth 6	{297.812, -24.919, 1000.515, 0.720, 0.903, 1.899, 1, 1}, --Booth 7	{299.296, -24.919, 1000.515, 0.742, 0.862, 1.899, 1, 1}, --Booth 8}setTimer(	function()		for _,v in ipairs ( booths) do			local x, y, z, lx, ly, lz, int, dim = unpack ( v)			--local marker = createMarker( x+0.5, y+0.3, z, "cylinder", 0.5, 90, 90, 255)			--local col = createColTube( x+0.3, y+0.3, z, 0.5, 1)			--setElementInterior( marker, int)			--setElementDimension(marker, dim)			local booth = createColCuboid( x, y, z, lx, ly, lz)			addEventHandler( "onClientColShapeHit", booth, detectBooth)			addEventHandler( "onClientColShapeLeave", booth, leaveBooth)		end	end, 100, 1)function detectBooth(hitElement, matchingDimension)	local int, dim = getElementInterior( hitElement), getElementDimension( hitElement)	if int == 1 then		if dim == 1 then			local trainer = getElementData( hitElement, "GTIgun.Training")			if trainer == true then				setElementDimension( hitElement, 2)				local x, y, z = getElementPosition( hitElement)				setPedFrozen( hitElement, true)				outputChatBox( "Pressing on a detection key ( w, a, s, d, q, e), will voluntarily end the simulation", 255, 0, 0)			end		end	endenddetectableChars = { ["w"] = true, ["a"] = true, ["s"] = true, ["d"] = true, ["q"] = true, ["e"] = true}addEventHandler( "onClientCharacter", root,	function( character)		if detectableChars[character] then			if getElementInterior( localPlayer) == 1 then				if getElementDimension( localPlayer) == 2 then					local data = getElementData( localPlayer, "GTIgun.Training")					if data == true then						if isPedFrozen( localPlayer) then							setElementData( localPlayer, "GTIgun.Training", false)							setPedFrozen( localPlayer, false)							exports.CRPhelp:dm( "Training was stopped because you pressed on the disabled key '"..character.."'", 255, 255, 0)						end					end				elseif isPedFrozen( localPlayer) then					setElementData( localPlayer, "GTIgun.Training", false)					setPedFrozen( localPlayer, false)					exports.CRPhelp:dm( "Training was stopped because you pressed on the disabled key '"..character.."'", 255, 255, 0)				end			end		end	end)function leaveBooth( theElement, matchingDimension)	if theElement == localPlayer then		if getElementDimension( theElement) ~= 1 then			setElementDimension( theElement, 1)			local data = getElementData( theElement, "GTIgun.Training")			if data == true then				setElementData( localPlayer, "GTIgun.Training", false)			end		end	endendsetTimer(	function()		for _,v in ipairs ( tmarkers) do			local x, y, z, dimension, interior = unpack ( v)			local market = createMarker( x, y, z, "cylinder", 1.5, 255, 255, 255)			local marker = createColTube( x, y, z, 0.9, 1.9)			setElementDimension( market, dimension)			setElementInterior( market, interior)			setElementDimension( marker, dimension)			setElementInterior( marker, interior)			addEventHandler ( "onClientColShapeHit", marker, openTrainer, false )		end	end, 100, 1)function openTrainer( hitElement)	if getElementType(hitElement) == "player" and (hitElement == localPlayer) then		if hitElement == localPlayer then			if not guiGetVisible(Training.window[1]) then				guiSetVisible( Training.window[1], true)				showCursor( true)			end		end	endendaddEventHandler( "onClientGUIClick", root,	function()		if source == Training.button[2] then			closeRangeWindow()		elseif source == Training.button[1] then			closeRangeWindow()			setupRange( localPlayer)		end	end)function setupRange( player)	if isElement( player) then		local trainer = getElementData( player, "GTIgun.Training")		if trainer ~= true then			outputChatBox( "Choose any booth to begin the training.", 255, 255, 0)			setElementData( player, "GTIgun.Training", true)		else			outputChatBox( "You can't begin the training because you are currently training.", 255, 0, 0)		end	endendfunction closeRangeWindow()	local visible = guiGetVisible( Training.window[1])	if visible == true then		guiSetVisible( Training.window[1], false)		showCursor( false)	endendfunction s()	local points = getElementData( localPlayer, "gunPoints") or 0	--	local r = getElementData( localPlayer, "rH") or 0	local b = getElementData( localPlayer, "bH") or 0	local b2 = getElementData( localPlayer, "bH2") or 0	local s = getElementData( localPlayer, "sH") or 0	local s2 = getElementData( localPlayer, "sH2") or 0	local g = getElementData( localPlayer, "gH") or 0	local g2 = getElementData( localPlayer, "gH2") or 0	--	guiSetText( Training.label[10], "Points Earned: "..tonumber(points))	--	guiSetText( Training.label[3], g2.." x 600")	guiSetText( Training.label[4], s2.." x 300")	guiSetText( Training.label[5], b2.." x 250")	guiSetText( Training.label[6], r.." x 50")	guiSetText( Training.label[7], g.." x 300")	guiSetText( Training.label[8], s.." x 150")	guiSetText( Training.label[9], b.." x 100")	--endsetTimer( s, 100, 0)